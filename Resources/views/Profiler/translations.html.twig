{% for flashMessage in app.session.flashbag.get('notice') %}
    <div class="flash flash-notice">
        {{ flashMessage }}
    </div>
{% endfor %}

<form method="post" action="{{ path('ao_translation_profiler_translations', {'token': token}) }}" id="ao_translations_form">
    <div class="search">
        <button type="submit" class="sf-button">
            <span class="border-l">
                <span class="border-r">
                    <span class="btn-bg">SAVE TRANSLATIONS</span>
                </span>
            </span>
        </button>

        <button type="button" class="sf-button" id="ao_translation_reset_cache" style="float: right">
            <span class="border-l">
                <span class="border-r">
                    <span class="btn-bg">RESET CACHE</span>
                </span>
            </span>
        </button>
        <button type="button" class="sf-button" id="ao_translation_reset_action_cache" style="float: right; margin-right: 10px;">
            <span class="border-l">
                <span class="border-r">
                    <span class="btn-bg">RESET ACTION CACHE</span>
                </span>
            </span>
        </button>
    </div>

    <table>
        {% for domain, msgs in messages %}
            <tbody>
                 <tr>
                     <th class="domain">{{ domain }}</th>
                     <th class="parameters">Parameters</th>
                      {% for locale, label in locales %}
                          <th>{{ label }}</th>
                      {% endfor %}
                 </tr>
                 {% for message in msgs %}
                      <tr data-id="{{ message['id'] }}">
                          <td>{{ message['identification'] }}</td>
                          <td>
                              <ul class="parameters">
                                  {% for param in message['parameters'] %}
                                      <li><a data-parameter="{{ param }}" href="#" title="Click to insert {{ param }} into textarea">{{ param }}</a></li>
                                  {% endfor %}
                              </ul>
                          </td>
                          {% for locale, label in locales %}
                            <td>
                              {{ form_widget(form[message.id][locale]) }}
                            </td>
                          {% endfor %}
                      </tr>
                  {% endfor %}
            </tbody>
        {% endfor %}
    </table>
    {{ form_rest(form) }}

    <div class="search">
      <button type="submit" class="sf-button">
          <span class="border-l">
              <span class="border-r">
                  <span class="btn-bg">SAVE TRANSLATIONS</span>
              </span>
          </span>
      </button>
    </div>
</form>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js" type="text/javascript"></script>
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.0/jquery-ui.min.js"></script>
<script type="text/javascript">
(function() {
  var $, methods;
  $ = jQuery;
  methods = {
    insert: function(value) {
      var after, before, o, pos;
      o = this[0];
      pos = methods['getCaretPosition'].apply(this);
      before = o.value.substring(0, pos);
      after = o.value.substring(pos, o.value.length);
      $(o).val(before + value + after);
      pos += value.length;
      return methods['setCaretPosition'].apply(this, [pos]);
    },
    getCaretPosition: function() {
      var caretPos, o, sel;
      o = this[0];
      caretPos = 0;
      if (document.selection) {
        o.focus();
        sel = document.selection.createRange();
        sel.moveStart('character', -o.value.length);
        caretPos = sel.text.length;
      } else if (o.selectionStart || o.selectionStart === '0') {
        caretPos = o.selectionStart;
      }
      return caretPos;
    },
    setCaretPosition: function(pos) {
      var f, o;
      o = this[0];
      if (o.setSelectionRange) {
        o.focus();
        return o.setSelectionRange(pos, pos);
      } else if (o.createTextRange) {
        f = function() {
          return o.focus();
        };
        setTimeout(f, 10);
        f = function(o, pos) {
          var range;
          range = o.createTextRange();
          range.collapse(true);
          range.moveEnd('character', pos);
          range.moveStart('character', pos);
          return range.select();
        };
        setTimeout("f(o, pos)", 20);
        return pos;
      }
    }
  };

  $.fn.atCaret = function(method) {
    if (methods[method]) {
      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
    } else if (typeof method === 'object' || !method) {
      return methods.init.apply(this, arguments);
    } else {
      return $.error('Method ' + method + ' does not exist on jQuery.atCaret');
    }
  };
}).call(this);
</script>
<script type="text/javascript">

$(function(){
    var message_ids = [];
    var focused = null;
    var rows = $('#ao_translations_form tr');
    $('#ao_translations_form textarea').change(function(){
        message_ids.push($(this).parents('tr').data('id'));
        $('#translations_ids').val($.unique(message_ids).join(','));
    }).focus(function(){
      rows.removeClass('focus');
      $(this).parents('tr').addClass('focus');
      focused = $(this);
    });

    $('#ao_translations_form ul.parameters a').click(function(){
      var row = $(this).parents('tr');
      if(row.find(focused).length)
      {
        var event = document.createEvent('TextEvent');
        var parameter = $(this).data('parameter');

        if(event.initTextEvent){
          var pos = focused.atCaret('getCaretPosition');
          event.initTextEvent('textInput', true, true, null, parameter);
          focused.get(0).dispatchEvent(event);
          focused.atCaret('setCaretPosition', pos+parameter.length);
        }
        else // for firefox
        {
          focused.atCaret('insert', parameter);
          focused.trigger('change');
        }
      }
      else
      {
        row.find('textarea').each(function(i,e){
          window.setTimeout(function(){
            $(e).effect("highlight", {}, 1000);
          }, 700*i);
        });
      }
      return false;
    });

    $('#ao_translation_reset_action_cache').click(function(){
        $('.flash').remove();
        $.post('{{ path('ao_translation_profiler_resetactioncache', {'token': token})|e('js') }}', function(data){
            $('#ao_translations_form').before('<div class="flash flash-notice">Action cache has been cleared!</div>');
        });
    });

    $('#ao_translation_reset_cache').click(function(){
        $('.flash').remove();
        $.post('{{ path('ao_translation_profiler_resetcache', {'token': token})|e('js') }}', function(data){
            $('#ao_translations_form').before('<div class="flash flash-notice">Cache has been cleared!</div>');
        });
    });
});
</script>
<style type="text/css">
#ao_translations_form th.domain {
  width: 150px;
}

#ao_translations_form th.parameters {
  width: 100px;
}

#ao_translations_form textarea {
  width: -moz-calc(100% - 4px);
  width: -webkit-calc(100% - 4px);
  width: calc(100% - 4px);
  border: #aaa 1px solid;
  padding: 0px 2px;
}

#ao_translations_form .focus textarea {
  border-color: #777;
  min-height: 100px;
}

#ao_translations_form ul.parameters li {
  padding: 0px;
}

#ao_translations_form ul.parameters a {
  text-decoration: none;
}

#ao_translations_form .search {
  float: none;
  padding-top: 0;
}

.flash {
  padding: 8px 35px 8px 14px;
  margin-bottom: 20px;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
  background-color: #fcf8e3;
  -webkit-border-radius: 4px;
     -moz-border-radius: 4px;
          border-radius: 4px;
}

.flash-notice {
  color: #fff;
  background-color: #aacd4e;
}
</style>
